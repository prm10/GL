function [y,in1,in2,f1,f2,z1,z1,c,o1,o2]=LSTM_ff(input,args,lay_i)
%% weight initial
% input gates
w_i=args.Weight.w_i;
r_i=args.Weight.r_i;
p_i=args.Weight.p_i;
% forget gates
w_f=args.Weight.w_f;
r_f=args.Weight.r_f;
p_f=args.Weight.p_f;
% cells
w_z=args.Weight.w_z;
r_z=args.Weight.r_z;
% output gates
w_o=args.Weight.w_o;
r_o=args.Weight.r_o;
p_o=args.Weight.p_o;

% learning rate
learningrate=args.learningrate;
% data
x=[input ones(T,1)];
%% value initial
in1=zeros(T,N);
in2=zeros(T,N);
f1=zeros(T,N);
f2=zeros(T,N);
z1=zeros(T,N);
z1=zeros(T,N);
c=zeros(T,N);
o1=zeros(T,N);
o2=zeros(T,N);
%% first time-step
t=1;
% input gates
in1(t,:)=x(t,:)*w_i;
in2(t,:)=sigmoid(in1(t,:));
% forget gates
f1(t,:)=x(t,:)*w_f;
f2(t,:)=sigmoid(f1(t,:));
% cells
z1(t,:)=x(t,:)*w_z;
z2(t,:)=tanh(z1(t,:));
c(t,:)=in2(t,:).*z2(t,:);
% output gates
o1(t,:)=x(t,:)*w_o+c(t,:).*p_o;
o2(t,:)=sigmoid(o1(t,:));
y(t,:)=o2(t,:).*tanh(c(t,:));
%% the rest time-step
for t=2:T
    % input gates
    in1(t,:)=x(t,:)*w_i+y(t-1,:)*r_i+c(t-1,:).*p_i;
    in2(t,:)=sigmoid(in1(t,:));
    % forget gates
    f1(t,:)=x(t,:)*w_f+y(t-1,:)*r_f+c(t-1,:).*p_f;
    f2(t,:)=sigmoid(f1(t,:));
    % cells
    z1(t,:)=x(t,:)*w_z+y(t-1,:)*r_z;
    z2(t,:)=tanh(z1(t,:));
    c(t,:)=f2(t,:).*c(t-1,:)+in2(t,:).*z2(t,:);
    % output gates
    o1(t,:)=x(t,:)*w_o+y(t-1,:)*r_o+c(t,:).*p_o;
    o2(t,:)=sigmoid(o1(t,:));
    y(t,:)=o2(t,:).*tanh(c(t,:));
end